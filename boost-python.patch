--- boost_1_34_0/tools/build/v2/tools/python.jam.orig	2007-04-06 20:17:43.000000000 +0200
+++ boost_1_34_0/tools/build/v2/tools/python.jam	2007-06-17 00:19:00.865685036 +0200
@@ -911,30 +911,7 @@
           ;
     }
 
-    # On *nix, we don't want to link either Boost.Python or Python
-    # extensions to libpython, because the Python interpreter itself
-    # provides all those symbols. If we linked to libpython, we'd get
-    # duplicate symbols. So declare two targets -- one for building
-    # extensions and another for embedding
-    #
-    # Unlike most *nix systems, Mac OS X's linker does not permit undefined
-    # symbols when linking a shared library. So, we still need to link
-    # against the Python framework, even when building extensions.
-    # Note that framework builds of Python always use shared libraries,
-    # so we do not need to worry about duplicate Python symbols.
-    if $(target-os) in windows cygwin darwin
-    {
-        alias python_for_extensions : python : $(target-requirements) ;
-    }
-    else
-    {
-        alias python_for_extensions
-                     :
-                     : $(target-requirements)
-                     :
-                     : $(usage-requirements)
-                     ;
-    }
+    alias python_for_extensions : python : $(target-requirements) ;
 }
 
 rule configured ( )
