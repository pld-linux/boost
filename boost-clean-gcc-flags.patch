--- boost_1_59_0/tools/build/src/tools/gcc.jam.orig	2015-08-11 15:53:51.000000000 +0200
+++ boost_1_59_0/tools/build/src/tools/gcc.jam	2015-09-12 17:16:00.647535444 +0200
@@ -369,9 +369,9 @@
 toolset.flags gcc.compile PCH_FILE <pch>on : <pch-file> ;
 
 # Declare flags and action for compilation.
-toolset.flags gcc.compile OPTIONS <optimization>off   : -O0 ;
-toolset.flags gcc.compile OPTIONS <optimization>speed : -O3 ;
-toolset.flags gcc.compile OPTIONS <optimization>space : -Os ;
+toolset.flags gcc.compile OPTIONS <optimization>off   : ;
+toolset.flags gcc.compile OPTIONS <optimization>speed : ;
+toolset.flags gcc.compile OPTIONS <optimization>space : ;
 
 toolset.flags gcc.compile OPTIONS <inlining>off  : -fno-inline ;
 toolset.flags gcc.compile OPTIONS <inlining>on   : -Wno-inline ;
@@ -382,8 +382,8 @@
 toolset.flags gcc.compile OPTIONS <warnings>all : -Wall -pedantic ;
 toolset.flags gcc.compile OPTIONS <warnings-as-errors>on : -Werror ;
 
-toolset.flags gcc.compile OPTIONS <debug-symbols>on : -g ;
-toolset.flags gcc.compile OPTIONS <profiling>on : -pg ;
+toolset.flags gcc.compile OPTIONS <debug-symbols>on : ;
+toolset.flags gcc.compile OPTIONS <profiling>on : ;
 
 toolset.flags gcc.compile.c++ OPTIONS <rtti>off : -fno-rtti ;
 toolset.flags gcc.compile.c++ OPTIONS <exception-handling>off : -fno-exceptions ;
@@ -451,23 +451,6 @@
                 option = -mlp64 ;
             }
         }
-        else
-        {
-            local arch = [ feature.get-values architecture : $(properties) ] ;
-            if $(arch) = power || $(arch) = sparc || $(arch) = x86
-            {
-                if $(model) = 32
-                {
-                    option = -m32 ;
-                }
-                else if $(model) = 64
-                {
-                    option = -m64 ;
-                }
-            }
-            # For darwin, the model can be 32_64. darwin.jam will handle that
-            # on its own.
-        }
         OPTIONS on $(targets) += $(option) ;
     }
 }
@@ -1076,7 +1059,7 @@
 # x86 and compatible
 # The 'native' option appeared in gcc 4.2 so we cannot safely use it as default.
 # Use i686 instead for 32-bit.
-toolset.flags gcc OPTIONS <architecture>x86/<address-model>32/<instruction-set> : -march=i686 ;
+toolset.flags gcc OPTIONS <architecture>x86/<address-model>32/<instruction-set> : ;
 cpu-flags gcc OPTIONS : x86 : native : -march=native ;
 cpu-flags gcc OPTIONS : x86 : i486 : -march=i486 ;
 cpu-flags gcc OPTIONS : x86 : i586 : -march=i586 ;
